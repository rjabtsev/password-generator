{"version":3,"sources":["components/PasswordGenerator.js","App.js","index.js"],"names":["PasswordGenerator","useState","password","setPassword","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","createPassword","characterList","finalPassword","characterListLength","length","i","characterIndex","Math","round","random","charAt","className","id","onClick","e","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","min","max","defaultValue","onChange","target","value","name","checked","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"+LA4JeA,EA1JW,WAExB,IAKA,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAgDN,oBAAS,GAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAA4CR,oBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAA4CV,oBAAS,GAArD,mBAAOW,EAAP,KAAuBC,EAAvB,KAoBMC,EAAiB,SAACC,GAItB,IAHA,IAAIC,EAAgB,GACdC,EAAsBF,EAAcG,OAEjCC,EAAI,EAAGA,EAAIf,EAAgBe,IAAK,CACvC,IAAMC,EAAiBC,KAAKC,MAAMD,KAAKE,SAAWN,GAClDD,GAAgCD,EAAcS,OAAOJ,GAEvD,OAAOJ,GAgBT,OACE,qBAAKS,UAAU,qDAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,oBAAIA,UAAU,qCAAd,gCAGA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,8FAAf,SACE,sBAAMC,GAAG,SAASD,UAAU,QAA5B,SACGvB,MAGL,wBACEuB,UAAU,mGACVE,QAlBiB,SAACC,IATJ,WACtB,IAAMC,EAAcC,SAASC,cAAc,YAC3CF,EAAYG,UAAY9B,EACxB4B,SAASG,KAAKC,YAAYL,GAC1BA,EAAYM,SACZL,SAASM,YAAY,QACrBP,EAAYQ,SAIZC,IAeM,SAIE,qBACEC,MAAM,6BACNd,UAAU,qBACVe,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,wKAKV,sBAAKrB,UAAU,OAAf,UACE,sBAAKA,UAAU,iDAAf,UACE,oDACA,uBACEA,UAAU,kBACVsB,KAAK,SACLrB,GAAG,SACHsB,IAAI,IACJC,IAAI,KACJC,aAAc9C,EACd+C,SAAU,SAACvB,GAAD,OAAOvB,EAAkBuB,EAAEwB,OAAOC,aAGhD,sBAAK5B,UAAU,yCAAf,UACE,sDACA,uBACEsB,KAAK,WACLrB,GAAG,YACH4B,KAAK,YACLC,QAASjD,EACT6C,SAAU,SAACvB,GAAD,OAAOrB,EAAoBqB,EAAEwB,OAAOG,eAGlD,sBAAK9B,UAAU,yCAAf,UACE,sDACA,uBACEsB,KAAK,WACLrB,GAAG,YACH4B,KAAK,YACLC,QAAS/C,EACT2C,SAAU,SAACvB,GAAD,OAAOnB,EAAoBmB,EAAEwB,OAAOG,eAGlD,sBAAK9B,UAAU,yCAAf,UACE,oDACA,uBACEsB,KAAK,WACLrB,GAAG,UACH4B,KAAK,UACLC,QAAS7C,EACTyC,SAAU,SAACvB,GAAD,OAAOjB,EAAkBiB,EAAEwB,OAAOG,eAGhD,sBAAK9B,UAAU,yCAAf,UACE,oDACA,uBACEsB,KAAK,WACLrB,GAAG,UACH4B,KAAK,UACLC,QAAS3C,EACTuC,SAAU,SAACvB,GAAD,OAAOf,EAAkBe,EAAEwB,OAAOG,kBAIlD,wBACE7B,GAAG,WACHD,UAAU,gGACVE,QAnIuB,SAACC,GAC9B,IAAIb,EAAgB,GAChBT,IACFS,GAfwB,8BAiBtBP,IACFO,GAjBwB,8BAmBtBL,IACFK,GAnBsB,cAqBpBH,IACFG,GArBsB,oBAwBxBZ,EAAYW,EAAeC,KAiHvB,qCCtIOyC,EARH,WACV,OACE,qBAAK/B,UAAU,4BAAf,SACE,cAAC,EAAD,OCANgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,U","file":"static/js/main.7dc5c14a.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst PasswordGenerator = () => {\r\n  // Characters\r\n  const charactersUppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n  const charactersLowercase = 'abcdefghijklmnopqrstuvwxyz'\r\n  const charactersNumbers = '0123456789'\r\n  const charactersSymbols = '!@#$%^&*(){}[]<>'\r\n  // State\r\n  const [password, setPassword] = useState('')\r\n  const [passwordLength, setPasswordLength] = useState(20)\r\n  const [includeUppercase, setIncludeUppercase] = useState(true)\r\n  const [includeLowercase, setIncludeLowercase] = useState(true)\r\n  const [includeNumbers, setIncludeNumbers] = useState(true)\r\n  const [includeSymbols, setIncludeSymbols] = useState(true)\r\n  // Functions\r\n  const handleGeneratePassword = (e) => {\r\n    let characterList = ''\r\n    if (includeUppercase) {\r\n      characterList = characterList + charactersUppercase\r\n    }\r\n    if (includeLowercase) {\r\n      characterList = characterList + charactersLowercase\r\n    }\r\n    if (includeNumbers) {\r\n      characterList = characterList + charactersNumbers\r\n    }\r\n    if (includeSymbols) {\r\n      characterList = characterList + charactersSymbols\r\n    }\r\n\r\n    setPassword(createPassword(characterList))\r\n  }\r\n\r\n  const createPassword = (characterList) => {\r\n    let finalPassword = ''\r\n    const characterListLength = characterList.length\r\n\r\n    for (let i = 0; i < passwordLength; i++) {\r\n      const characterIndex = Math.round(Math.random() * characterListLength)\r\n      finalPassword = finalPassword + characterList.charAt(characterIndex)\r\n    }\r\n    return finalPassword\r\n  }\r\n\r\n  const copyToClipboard = () => {\r\n    const newTextArea = document.createElement('textarea')\r\n    newTextArea.innerText = password\r\n    document.body.appendChild(newTextArea)\r\n    newTextArea.select()\r\n    document.execCommand('copy')\r\n    newTextArea.remove()\r\n  }\r\n\r\n  const handleCopyPassword = (e) => {\r\n    copyToClipboard()\r\n  }\r\n\r\n  return (\r\n    <div className='flex flex-col items-center justify-center h-screen'>\r\n      <div className='p-6 bg-white shadow-xl w-96 rounded-2xl'>\r\n        <h2 className='text-2xl font-semibold text-center'>\r\n          Password Generator\r\n        </h2>\r\n        <div className='flex mt-8'>\r\n          <div className='flex items-center justify-center w-full h-12 text-lg font-semibold bg-gray-100 rounded-l-xl'>\r\n            <span id='result' className='px-2 '>\r\n              {password}\r\n            </span>\r\n          </div>\r\n          <button\r\n            className='flex items-center justify-center h-12 transition bg-blue-500 rounded-r-xl hover:bg-blue-600 w-14'\r\n            onClick={handleCopyPassword}\r\n          >\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              className='text-white h-7 w-7'\r\n              fill='none'\r\n              viewBox='0 0 24 24'\r\n              stroke='currentColor'\r\n            >\r\n              <path\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth={2}\r\n                d='M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3'\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <div className='mt-8'>\r\n          <div className='flex py-1 -my-0.5 justify-between items-center'>\r\n            <label>Password length</label>\r\n            <input\r\n              className='py-1 rounded-xl'\r\n              type='number'\r\n              id='length'\r\n              min='6'\r\n              max='20'\r\n              defaultValue={passwordLength}\r\n              onChange={(e) => setPasswordLength(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div className='flex items-center justify-between py-2'>\r\n            <label>Include uppercase</label>\r\n            <input\r\n              type='checkbox'\r\n              id='uppercase'\r\n              name='uppercase'\r\n              checked={includeUppercase}\r\n              onChange={(e) => setIncludeUppercase(e.target.checked)}\r\n            ></input>\r\n          </div>\r\n          <div className='flex items-center justify-between py-2'>\r\n            <label>Include lowercase</label>\r\n            <input\r\n              type='checkbox'\r\n              id='lowercase'\r\n              name='lowercase'\r\n              checked={includeLowercase}\r\n              onChange={(e) => setIncludeLowercase(e.target.checked)}\r\n            ></input>\r\n          </div>\r\n          <div className='flex items-center justify-between py-2'>\r\n            <label>Include numbers</label>\r\n            <input\r\n              type='checkbox'\r\n              id='numbers'\r\n              name='numbers'\r\n              checked={includeNumbers}\r\n              onChange={(e) => setIncludeNumbers(e.target.checked)}\r\n            ></input>\r\n          </div>\r\n          <div className='flex items-center justify-between py-2'>\r\n            <label>Include symbols</label>\r\n            <input\r\n              type='checkbox'\r\n              id='symbols'\r\n              name='symbols'\r\n              checked={includeSymbols}\r\n              onChange={(e) => setIncludeSymbols(e.target.checked)}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <button\r\n          id='generate'\r\n          className='w-full py-3 mt-6 font-semibold text-white transition bg-blue-500 hover:bg-blue-600 rounded-xl'\r\n          onClick={handleGeneratePassword}\r\n        >\r\n          Generate Password\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PasswordGenerator\r\n","import PasswordGenerator from './components/PasswordGenerator'\n\nconst App = () => {\n  return (\n    <div className=' bg-gray-100 min-h-screen'>\n      <PasswordGenerator />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}